<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1436.vfa_244484591f">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>melke</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.2.21-451.vd51df8df52ec">
      <queuingDurationMillis>2</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@730.ve57b_34648c63">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2214.vb_b_34b_2ea_9b_83">
      <stagesUUID>32765b32-ff48-4fb2-b097-f25f7542c923</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2214.vb_b_34b_2ea_9b_83">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Checkout</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>git</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>branch</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">main</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>url</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">https://github.com/kettaabii/MicroservicesProject.git</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Build &amp; Test Microservices</name>
                <branches/>
                <parallel>
                  <stages>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <agent>
                        <agentType>
                          <key>any</key>
                        </agentType>
                      </agent>
                      <name>Build &amp; Test user-service</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                              <name>dir</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                                <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                                  <value class="string">user-service</value>
                                </value>
                              </args>
                              <children>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                                  <name>sh</name>
                                  <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                    <arguments class="linked-hash-map">
                                      <entry>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                          <key>script</key>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                          <value class="string">mvn clean package</value>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      </entry>
                                    </arguments>
                                  </args>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                              </children>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <agent>
                        <agentType>
                          <key>any</key>
                        </agentType>
                      </agent>
                      <name>Build &amp; Test project-service</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                              <name>dir</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                                <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                                  <value class="string">project-service</value>
                                </value>
                              </args>
                              <children>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                                  <name>sh</name>
                                  <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                    <arguments class="linked-hash-map">
                                      <entry>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                          <key>script</key>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                          <value class="string">mvn clean package</value>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      </entry>
                                    </arguments>
                                  </args>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                              </children>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <agent>
                        <agentType>
                          <key>any</key>
                        </agentType>
                      </agent>
                      <name>Build &amp; Test task-service</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                              <name>dir</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                                <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                                  <value class="string">task-service</value>
                                </value>
                              </args>
                              <children>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                                  <name>sh</name>
                                  <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                    <arguments class="linked-hash-map">
                                      <entry>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                          <key>script</key>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                          <value class="string">mvn clean package</value>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      </entry>
                                    </arguments>
                                  </args>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                              </children>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <agent>
                        <agentType>
                          <key>any</key>
                        </agentType>
                      </agent>
                      <name>Build &amp; Test resource-service</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                              <name>dir</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                                <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                                  <value class="string">resource-service</value>
                                </value>
                              </args>
                              <children>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                                  <name>sh</name>
                                  <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                    <arguments class="linked-hash-map">
                                      <entry>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                          <key>script</key>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                          <value class="string">mvn clean package</value>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      </entry>
                                    </arguments>
                                  </args>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                              </children>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <agent>
                        <agentType>
                          <key>any</key>
                        </agentType>
                      </agent>
                      <name>Build &amp; Package api-gateway-service</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                              <name>dir</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                                <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                                  <value class="string">api-gateway-service</value>
                                </value>
                              </args>
                              <children>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                                  <name>sh</name>
                                  <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                    <arguments class="linked-hash-map">
                                      <entry>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                          <key>script</key>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                          <value class="string">mvn clean package</value>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      </entry>
                                    </arguments>
                                  </args>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                              </children>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <agent>
                        <agentType>
                          <key>any</key>
                        </agentType>
                      </agent>
                      <name>Build &amp; Package eureka-server</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                              <name>dir</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                                <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                                  <value class="string">eureka-server</value>
                                </value>
                              </args>
                              <children>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                                  <name>sh</name>
                                  <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                    <arguments class="linked-hash-map">
                                      <entry>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                          <key>script</key>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                          <value class="string">mvn clean package</value>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      </entry>
                                    </arguments>
                                  </args>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                              </children>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                  </stages>
                  <uuid>80cdb294-d964-49ef-be75-56d2191a2c17</uuid>
                </parallel>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <agent>
                  <agentType>
                    <key>any</key>
                  </agentType>
                </agent>
                <name>SonarQube Analysis</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def scannerHome = tool &apos;SonarQubeScanner&apos;

                    dir(&apos;user-service&apos;) {
                        sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.url=http://sonarqube:9000 -Dsonar.projectKey=user-service -Dsonar.sources=. -Dsonar.login=${SONARQUBE_CREDENTIALS} -Dsonar.java.binaries=target/classes&quot;
                    }
                    dir(&apos;project-service&apos;) {
                        sh &quot;${scannerHome}/bin/sonar-scanner  -Dsonar.url=http://sonarqube:9000 -Dsonar.projectKey=project-service -Dsonar.sources=. -Dsonar.login=${SONARQUBE_CREDENTIALS} -Dsonar.java.binaries=target/classes&quot;
                    }
                    dir(&apos;task-service&apos;) {
                        sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.url=http://sonarqube:9000 -Dsonar.projectKey=task-service -Dsonar.sources=. -Dsonar.login=${SONARQUBE_CREDENTIALS} -Dsonar.java.binaries=target/classes&quot;
                    }
                    dir(&apos;resource-service&apos;) {
                        sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.url=http://sonarqube:9000 -Dsonar.projectKey=resource-service -Dsonar.sources=. -Dsonar.login=${SONARQUBE_CREDENTIALS} -Dsonar.java.binaries=target/classes&quot;
                    }
                    dir(&apos;api-gateway-service&apos;) {
                        sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.url=http://sonarqube:9000 -Dsonar.projectKey=api-gateway-service -Dsonar.sources=. -Dsonar.login=${SONARQUBE_CREDENTIALS} -Dsonar.java.binaries=target/classes&quot;
                    }
                    dir(&apos;eureka-server&apos;) {
                        sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.url=http://sonarqube:9000 -Dsonar.projectKey=eureka-server -Dsonar.sources=. -Dsonar.login=${SONARQUBE_CREDENTIALS} -Dsonar.java.binaries=target/classes&quot;
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Build Docker Images &amp; Push</name>
                <branches/>
                <parallel>
                  <stages>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <agent>
                        <agentType>
                          <key>any</key>
                        </agentType>
                      </agent>
                      <name>Build Docker &amp; Push for user-service</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                              <name>dir</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                                <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                                  <value class="string">user-service</value>
                                </value>
                              </args>
                              <children>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                                  <name>script</name>
                                  <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                    <arguments class="linked-hash-map">
                                      <entry>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                          <key>scriptBlock</key>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                          <value class="string">def dockerImage = docker.build(&quot;meleke/user-service:${env.TAG_VERSION ?: &apos;latest&apos;}&quot;)
                                docker.withRegistry(&apos;https://index.docker.io/v1/&apos;, &apos;DOCKERHUB_CREDENTIALS&apos;) {
                                    dockerImage.push()
                                }</value>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      </entry>
                                    </arguments>
                                  </args>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                              </children>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <agent>
                        <agentType>
                          <key>any</key>
                        </agentType>
                      </agent>
                      <name>Build Docker &amp; Push for project-service</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                              <name>dir</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                                <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                                  <value class="string">project-service</value>
                                </value>
                              </args>
                              <children>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                                  <name>script</name>
                                  <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                    <arguments class="linked-hash-map">
                                      <entry>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                          <key>scriptBlock</key>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                          <value class="string">def dockerImage = docker.build(&quot;meleke/project-service:${env.TAG_VERSION ?: &apos;latest&apos;}&quot;)
                                docker.withRegistry(&apos;https://index.docker.io/v1/&apos;, &apos;DOCKERHUB_CREDENTIALS&apos;) {
                                    dockerImage.push()
                                }</value>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      </entry>
                                    </arguments>
                                  </args>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                              </children>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <agent>
                        <agentType>
                          <key>any</key>
                        </agentType>
                      </agent>
                      <name>Build Docker &amp; Push for task-service</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                              <name>dir</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                                <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                                  <value class="string">task-service</value>
                                </value>
                              </args>
                              <children>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                                  <name>script</name>
                                  <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                    <arguments class="linked-hash-map">
                                      <entry>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                          <key>scriptBlock</key>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                          <value class="string">def dockerImage = docker.build(&quot;meleke/task-service:${env.TAG_VERSION ?: &apos;latest&apos;}&quot;)
                                docker.withRegistry(&apos;https://index.docker.io/v1/&apos;, &apos;DOCKERHUB_CREDENTIALS&apos;) {
                                    dockerImage.push()
                                }</value>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      </entry>
                                    </arguments>
                                  </args>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                              </children>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <agent>
                        <agentType>
                          <key>any</key>
                        </agentType>
                      </agent>
                      <name>Build Docker &amp; Push for resource-service</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                              <name>dir</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                                <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                                  <value class="string">resource-service</value>
                                </value>
                              </args>
                              <children>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                                  <name>script</name>
                                  <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                    <arguments class="linked-hash-map">
                                      <entry>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                          <key>scriptBlock</key>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                          <value class="string">def dockerImage = docker.build(&quot;meleke/resource-service:${env.TAG_VERSION ?: &apos;latest&apos;}&quot;)
                                docker.withRegistry(&apos;https://index.docker.io/v1/&apos;, &apos;DOCKERHUB_CREDENTIALS&apos;) {
                                    dockerImage.push()
                                }</value>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      </entry>
                                    </arguments>
                                  </args>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                              </children>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <agent>
                        <agentType>
                          <key>any</key>
                        </agentType>
                      </agent>
                      <name>Build Docker &amp; Push for api-gateway-service</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                              <name>dir</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                                <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                                  <value class="string">api-gateway-service</value>
                                </value>
                              </args>
                              <children>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                                  <name>script</name>
                                  <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                    <arguments class="linked-hash-map">
                                      <entry>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                          <key>scriptBlock</key>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                          <value class="string">def dockerImage = docker.build(&quot;meleke/api-gateway-service:${env.TAG_VERSION ?: &apos;latest&apos;}&quot;)
                                docker.withRegistry(&apos;https://index.docker.io/v1/&apos;, &apos;DOCKERHUB_CREDENTIALS&apos;) {
                                    dockerImage.push()
                                }</value>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      </entry>
                                    </arguments>
                                  </args>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                              </children>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <agent>
                        <agentType>
                          <key>any</key>
                        </agentType>
                      </agent>
                      <name>Build Docker &amp; Push for eureka-server</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                              <name>dir</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                                <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                                  <value class="string">eureka-server</value>
                                </value>
                              </args>
                              <children>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                                  <name>script</name>
                                  <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                    <arguments class="linked-hash-map">
                                      <entry>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                          <key>scriptBlock</key>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                          <value class="string">def dockerImage = docker.build(&quot;meleke/eureka-server:${env.TAG_VERSION ?: &apos;latest&apos;}&quot;)
                                docker.withRegistry(&apos;https://index.docker.io/v1/&apos;, &apos;DOCKERHUB_CREDENTIALS&apos;) {
                                    dockerImage.push()
                                }</value>
                                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      </entry>
                                    </arguments>
                                  </args>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                              </children>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                  </stages>
                  <uuid>e2eb150d-63c9-4e9d-a90a-55be45d3b08d</uuid>
                </parallel>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>32765b32-ff48-4fb2-b097-f25f7542c923</uuid>
          </stages>
          <postBuild>
            <conditions>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                <condition>always</condition>
                <branch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>cleanWs</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map"/>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </branch>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
            </conditions>
          </postBuild>
          <environment>
            <variables class="linked-hash-map">
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>DOCKERHUB_CREDENTIALS</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTInternalFunctionCall>
                  <name>credentials</name>
                  <args>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                      <value class="string">docker-hub</value>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  </args>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTInternalFunctionCall>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>SONARQUBE_CREDENTIALS</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">squ_f0e0afefe50213563d2b534261e3bc2fc096c975</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
            </variables>
          </environment>
          <agent>
            <variables class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
              <value class="string">linux</value>
            </variables>
            <agentType>
              <key>label</key>
            </agentType>
          </agent>
          <tools>
            <tools class="linked-hash-map">
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>maven</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">mvn</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
            </tools>
          </tools>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <hudson.plugins.git.util.BuildData plugin="git@5.5.1">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/main</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@6.0.0">
              <sha1>92addb77bcb09deacc869abbc8efafa5cbb3c0a0</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/main</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>3</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/kettaabii/MicroservicesProject.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@427.v4ca_6512e7df1">
      <revisionStates>
        <entry>
          <string>git https://github.com/kettaabii/MicroservicesProject.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1378.v81ef4269d764">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.21-451.vd51df8df52ec">
      <queuingDurationMillis>4</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>3</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>9023</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.21-451.vd51df8df52ec">
      <queuingDurationMillis>9018</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>9017</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>10771</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.21-451.vd51df8df52ec">
      <queuingDurationMillis>19785</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>19786</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>10083</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.21-451.vd51df8df52ec">
      <queuingDurationMillis>29861</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>29862</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>10516</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.21-451.vd51df8df52ec">
      <queuingDurationMillis>40369</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>40371</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>6863</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.21-451.vd51df8df52ec">
      <queuingDurationMillis>47225</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>47226</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>7338</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@3964.v0767b_4b_a_0b_fa_">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.21-451.vd51df8df52ec">
      <queuingDurationMillis>5</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>3</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>13786</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.21-451.vd51df8df52ec">
      <queuingDurationMillis>20</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>16</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>73937</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
  </actions>
  <queueId>304</queueId>
  <timestamp>1727303959976</timestamp>
  <startTime>1727303959983</startTime>
  <result>FAILURE</result>
  <duration>77219</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>pipeline {
    agent { label &apos;linux&apos; }

    tools {
        maven &apos;mvn&apos;
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials(&apos;docker-hub&apos;)
        SONARQUBE_CREDENTIALS = &apos;squ_f0e0afefe50213563d2b534261e3bc2fc096c975&apos;
    }

    stages {
        stage(&apos;Checkout&apos;) {
            steps {
                git branch: &apos;main&apos;, url: &apos;https://github.com/kettaabii/MicroservicesProject.git&apos;
            }
        }

        stage(&apos;Build &amp; Test Microservices&apos;) {
            parallel {
                stage(&apos;Build &amp; Test user-service&apos;) {
                    agent any
                    steps {
                        dir(&apos;user-service&apos;) {
                            sh &apos;mvn clean package&apos;
                        }
                    }
                }

                stage(&apos;Build &amp; Test project-service&apos;) {
                    agent any
                    steps {
                        dir(&apos;project-service&apos;) {
                            sh &apos;mvn clean package&apos;
                        }
                    }
                }

                stage(&apos;Build &amp; Test task-service&apos;) {
                    agent any
                    steps {
                        dir(&apos;task-service&apos;) {
                            sh &apos;mvn clean package&apos;
                        }
                    }
                }

                stage(&apos;Build &amp; Test resource-service&apos;) {
                    agent any
                    steps {
                        dir(&apos;resource-service&apos;) {
                            sh &apos;mvn clean package&apos;
                        }
                    }
                }

                stage(&apos;Build &amp; Package api-gateway-service&apos;) {
                    agent any
                    steps {
                        dir(&apos;api-gateway-service&apos;) {
                            sh &apos;mvn clean package&apos;
                        }
                    }
                }

                stage(&apos;Build &amp; Package eureka-server&apos;) {
                    agent any
                    steps {
                        dir(&apos;eureka-server&apos;) {
                            sh &apos;mvn clean package&apos;
                        }
                    }
                }
            }
        }

        stage(&apos;SonarQube Analysis&apos;) {
            agent any
            steps {
                script {
                    def scannerHome = tool &apos;SonarQubeScanner&apos;

                    dir(&apos;user-service&apos;) {
                        sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.url=http://sonarqube:9000 -Dsonar.projectKey=user-service -Dsonar.sources=. -Dsonar.login=${SONARQUBE_CREDENTIALS} -Dsonar.java.binaries=target/classes&quot;
                    }
                    dir(&apos;project-service&apos;) {
                        sh &quot;${scannerHome}/bin/sonar-scanner  -Dsonar.url=http://sonarqube:9000 -Dsonar.projectKey=project-service -Dsonar.sources=. -Dsonar.login=${SONARQUBE_CREDENTIALS} -Dsonar.java.binaries=target/classes&quot;
                    }
                    dir(&apos;task-service&apos;) {
                        sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.url=http://sonarqube:9000 -Dsonar.projectKey=task-service -Dsonar.sources=. -Dsonar.login=${SONARQUBE_CREDENTIALS} -Dsonar.java.binaries=target/classes&quot;
                    }
                    dir(&apos;resource-service&apos;) {
                        sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.url=http://sonarqube:9000 -Dsonar.projectKey=resource-service -Dsonar.sources=. -Dsonar.login=${SONARQUBE_CREDENTIALS} -Dsonar.java.binaries=target/classes&quot;
                    }
                    dir(&apos;api-gateway-service&apos;) {
                        sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.url=http://sonarqube:9000 -Dsonar.projectKey=api-gateway-service -Dsonar.sources=. -Dsonar.login=${SONARQUBE_CREDENTIALS} -Dsonar.java.binaries=target/classes&quot;
                    }
                    dir(&apos;eureka-server&apos;) {
                        sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.url=http://sonarqube:9000 -Dsonar.projectKey=eureka-server -Dsonar.sources=. -Dsonar.login=${SONARQUBE_CREDENTIALS} -Dsonar.java.binaries=target/classes&quot;
                    }
                }
            }
        }

        stage(&apos;Build Docker Images &amp; Push&apos;) {
            parallel {
                stage(&apos;Build Docker &amp; Push for user-service&apos;) {
                    agent any
                    steps {
                        dir(&apos;user-service&apos;) {
                            script {
                                def dockerImage = docker.build(&quot;meleke/user-service:${env.TAG_VERSION ?: &apos;latest&apos;}&quot;)
                                docker.withRegistry(&apos;https://index.docker.io/v1/&apos;, &apos;DOCKERHUB_CREDENTIALS&apos;) {
                                    dockerImage.push()
                                }
                            }
                        }
                    }
                }

                stage(&apos;Build Docker &amp; Push for project-service&apos;) {
                    agent any
                    steps {
                        dir(&apos;project-service&apos;) {
                            script {
                                def dockerImage = docker.build(&quot;meleke/project-service:${env.TAG_VERSION ?: &apos;latest&apos;}&quot;)
                                docker.withRegistry(&apos;https://index.docker.io/v1/&apos;, &apos;DOCKERHUB_CREDENTIALS&apos;) {
                                    dockerImage.push()
                                }
                            }
                        }
                    }
                }

                stage(&apos;Build Docker &amp; Push for task-service&apos;) {
                    agent any
                    steps {
                        dir(&apos;task-service&apos;) {
                            script {
                                def dockerImage = docker.build(&quot;meleke/task-service:${env.TAG_VERSION ?: &apos;latest&apos;}&quot;)
                                docker.withRegistry(&apos;https://index.docker.io/v1/&apos;, &apos;DOCKERHUB_CREDENTIALS&apos;) {
                                    dockerImage.push()
                                }
                            }
                        }
                    }
                }

                stage(&apos;Build Docker &amp; Push for resource-service&apos;) {
                    agent any
                    steps {
                        dir(&apos;resource-service&apos;) {
                            script {
                                def dockerImage = docker.build(&quot;meleke/resource-service:${env.TAG_VERSION ?: &apos;latest&apos;}&quot;)
                                docker.withRegistry(&apos;https://index.docker.io/v1/&apos;, &apos;DOCKERHUB_CREDENTIALS&apos;) {
                                    dockerImage.push()
                                }
                            }
                        }
                    }
                }

                stage(&apos;Build Docker &amp; Push for api-gateway-service&apos;) {
                    agent any
                    steps {
                        dir(&apos;api-gateway-service&apos;) {
                            script {
                                def dockerImage = docker.build(&quot;meleke/api-gateway-service:${env.TAG_VERSION ?: &apos;latest&apos;}&quot;)
                                docker.withRegistry(&apos;https://index.docker.io/v1/&apos;, &apos;DOCKERHUB_CREDENTIALS&apos;) {
                                    dockerImage.push()
                                }
                            }
                        }
                    }
                }

                stage(&apos;Build Docker &amp; Push for eureka-server&apos;) {
                    agent any
                    steps {
                        dir(&apos;eureka-server&apos;) {
                            script {
                                def dockerImage = docker.build(&quot;meleke/eureka-server:${env.TAG_VERSION ?: &apos;latest&apos;}&quot;)
                                docker.withRegistry(&apos;https://index.docker.io/v1/&apos;, &apos;DOCKERHUB_CREDENTIALS&apos;) {
                                    dockerImage.push()
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            // Clean up steps
            cleanWs()
        }
    }
}</script>
    <loadedScripts class="linked-hash-map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>2405944235</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>2748592719</long>
      </entry>
      <entry>
        <string>runQueue</string>
        <long>24551294722</long>
      </entry>
      <entry>
        <string>run</string>
        <long>8152378628</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>916081344</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>2463792243</long>
      </entry>
    </timings>
    <internalCalls class="sorted-set">
      <string>hudson.model.Result.fromString</string>
      <string>org.jenkinsci.plugins.pipeline.StageStatus.TAG_NAME</string>
      <string>org.jenkinsci.plugins.workflow.job.WorkflowRun.result</string>
    </internalCalls>
    <sandbox>true</sandbox>
    <iota>300</iota>
    <head>1:300</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
    <storageDir>workflow-completed</storageDir>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@5.5.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/kettaabii/MicroservicesProject.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/main</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/xpert-microservice-pipeline</workspace>
      <changelogFile>/var/jenkins_home/jobs/xpert-microservice-pipeline/builds/3/changelog1034651367877262010.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@5.5.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/kettaabii/MicroservicesProject.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>*/main</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.LocalBranch>
            <localBranch>main</localBranch>
          </hudson.plugins.git.extensions.impl.LocalBranch>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/xpert-microservice-pipeline</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/var/jenkins_home/workspace/xpert-microservice-pipeline@2</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/var/jenkins_home/workspace/xpert-microservice-pipeline@2</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/var/jenkins_home/workspace/xpert-microservice-pipeline@2</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/var/jenkins_home/workspace/xpert-microservice-pipeline@2</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/var/jenkins_home/workspace/xpert-microservice-pipeline@2</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/var/jenkins_home/workspace/xpert-microservice-pipeline@2</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/var/jenkins_home/workspace/xpert-microservice-pipeline@2</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>